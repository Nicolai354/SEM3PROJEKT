//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Remee.JackmanService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Case : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Subcategory SubcategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Supporter SupporterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingSystem {
            get {
                return this.OperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingSystemField, value) != true)) {
                    this.OperatingSystemField = value;
                    this.RaisePropertyChanged("OperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Subcategory Subcategory {
            get {
                return this.SubcategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryField, value) != true)) {
                    this.SubcategoryField = value;
                    this.RaisePropertyChanged("Subcategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Supporter Supporter {
            get {
                return this.SupporterField;
            }
            set {
                if ((object.ReferenceEquals(this.SupporterField, value) != true)) {
                    this.SupporterField = value;
                    this.RaisePropertyChanged("Supporter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Subcategory[] SubcategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Subcategory[] Subcategories {
            get {
                return this.SubcategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoriesField, value) != true)) {
                    this.SubcategoriesField = value;
                    this.RaisePropertyChanged("Subcategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Customer : Remee.JackmanService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Company CompanyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subcategory", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Subcategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supporter", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Supporter : Remee.JackmanService.Person {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Remee.JackmanService.Supporter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Remee.JackmanService.Customer))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/Jackman.Models")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Remee.JackmanService.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Remee.JackmanService.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JackmanService.IRemeeSupport")]
    public interface IRemeeSupport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseEdit", ReplyAction="http://tempuri.org/IRemeeSupport/CaseEditResponse")]
        void CaseEdit(Remee.JackmanService.Case c, int editingSupporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseEdit", ReplyAction="http://tempuri.org/IRemeeSupport/CaseEditResponse")]
        System.Threading.Tasks.Task CaseEditAsync(Remee.JackmanService.Case c, int editingSupporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCases", ReplyAction="http://tempuri.org/IRemeeSupport/GetCasesResponse")]
        Remee.JackmanService.Case[] GetCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCases", ReplyAction="http://tempuri.org/IRemeeSupport/GetCasesResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Case[]> GetCasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCasesForSupporter", ReplyAction="http://tempuri.org/IRemeeSupport/GetCasesForSupporterResponse")]
        Remee.JackmanService.Case[] GetCasesForSupporter(int supporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCasesForSupporter", ReplyAction="http://tempuri.org/IRemeeSupport/GetCasesForSupporterResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Case[]> GetCasesForSupporterAsync(int supporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseCreate", ReplyAction="http://tempuri.org/IRemeeSupport/CaseCreateResponse")]
        int CaseCreate(Remee.JackmanService.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseCreate", ReplyAction="http://tempuri.org/IRemeeSupport/CaseCreateResponse")]
        System.Threading.Tasks.Task<int> CaseCreateAsync(Remee.JackmanService.Case c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCase", ReplyAction="http://tempuri.org/IRemeeSupport/GetCaseResponse")]
        Remee.JackmanService.Case GetCase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCase", ReplyAction="http://tempuri.org/IRemeeSupport/GetCaseResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Case> GetCaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseTake", ReplyAction="http://tempuri.org/IRemeeSupport/CaseTakeResponse")]
        void CaseTake(int caseId, int supporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseTake", ReplyAction="http://tempuri.org/IRemeeSupport/CaseTakeResponse")]
        System.Threading.Tasks.Task CaseTakeAsync(int caseId, int supporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCategories", ReplyAction="http://tempuri.org/IRemeeSupport/GetCategoriesResponse")]
        Remee.JackmanService.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetCategories", ReplyAction="http://tempuri.org/IRemeeSupport/GetCategoriesResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Category[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetSubcategories", ReplyAction="http://tempuri.org/IRemeeSupport/GetSubcategoriesResponse")]
        Remee.JackmanService.Subcategory[] GetSubcategories(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetSubcategories", ReplyAction="http://tempuri.org/IRemeeSupport/GetSubcategoriesResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Subcategory[]> GetSubcategoriesAsync(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetComments", ReplyAction="http://tempuri.org/IRemeeSupport/GetCommentsResponse")]
        Remee.JackmanService.Comment[] GetComments(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetComments", ReplyAction="http://tempuri.org/IRemeeSupport/GetCommentsResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Comment[]> GetCommentsAsync(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CreateComment", ReplyAction="http://tempuri.org/IRemeeSupport/CreateCommentResponse")]
        void CreateComment(int caseId, int personId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CreateComment", ReplyAction="http://tempuri.org/IRemeeSupport/CreateCommentResponse")]
        System.Threading.Tasks.Task CreateCommentAsync(int caseId, int personId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetStatuses", ReplyAction="http://tempuri.org/IRemeeSupport/GetStatusesResponse")]
        Remee.JackmanService.Status[] GetStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetStatuses", ReplyAction="http://tempuri.org/IRemeeSupport/GetStatusesResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Status[]> GetStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseChangeStatus", ReplyAction="http://tempuri.org/IRemeeSupport/CaseChangeStatusResponse")]
        void CaseChangeStatus(int caseId, int StatusId, int SupporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/CaseChangeStatus", ReplyAction="http://tempuri.org/IRemeeSupport/CaseChangeStatusResponse")]
        System.Threading.Tasks.Task CaseChangeStatusAsync(int caseId, int StatusId, int SupporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetSupporters", ReplyAction="http://tempuri.org/IRemeeSupport/GetSupportersResponse")]
        Remee.JackmanService.Supporter[] GetSupporters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemeeSupport/GetSupporters", ReplyAction="http://tempuri.org/IRemeeSupport/GetSupportersResponse")]
        System.Threading.Tasks.Task<Remee.JackmanService.Supporter[]> GetSupportersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemeeSupportChannel : Remee.JackmanService.IRemeeSupport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemeeSupportClient : System.ServiceModel.ClientBase<Remee.JackmanService.IRemeeSupport>, Remee.JackmanService.IRemeeSupport {
        
        public RemeeSupportClient() {
        }
        
        public RemeeSupportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemeeSupportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemeeSupportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemeeSupportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CaseEdit(Remee.JackmanService.Case c, int editingSupporterId) {
            base.Channel.CaseEdit(c, editingSupporterId);
        }
        
        public System.Threading.Tasks.Task CaseEditAsync(Remee.JackmanService.Case c, int editingSupporterId) {
            return base.Channel.CaseEditAsync(c, editingSupporterId);
        }
        
        public Remee.JackmanService.Case[] GetCases() {
            return base.Channel.GetCases();
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Case[]> GetCasesAsync() {
            return base.Channel.GetCasesAsync();
        }
        
        public Remee.JackmanService.Case[] GetCasesForSupporter(int supporterId) {
            return base.Channel.GetCasesForSupporter(supporterId);
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Case[]> GetCasesForSupporterAsync(int supporterId) {
            return base.Channel.GetCasesForSupporterAsync(supporterId);
        }
        
        public int CaseCreate(Remee.JackmanService.Case c) {
            return base.Channel.CaseCreate(c);
        }
        
        public System.Threading.Tasks.Task<int> CaseCreateAsync(Remee.JackmanService.Case c) {
            return base.Channel.CaseCreateAsync(c);
        }
        
        public Remee.JackmanService.Case GetCase(int id) {
            return base.Channel.GetCase(id);
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Case> GetCaseAsync(int id) {
            return base.Channel.GetCaseAsync(id);
        }
        
        public void CaseTake(int caseId, int supporterId) {
            base.Channel.CaseTake(caseId, supporterId);
        }
        
        public System.Threading.Tasks.Task CaseTakeAsync(int caseId, int supporterId) {
            return base.Channel.CaseTakeAsync(caseId, supporterId);
        }
        
        public Remee.JackmanService.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public Remee.JackmanService.Subcategory[] GetSubcategories(int categoryId) {
            return base.Channel.GetSubcategories(categoryId);
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Subcategory[]> GetSubcategoriesAsync(int categoryId) {
            return base.Channel.GetSubcategoriesAsync(categoryId);
        }
        
        public Remee.JackmanService.Comment[] GetComments(int caseId) {
            return base.Channel.GetComments(caseId);
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Comment[]> GetCommentsAsync(int caseId) {
            return base.Channel.GetCommentsAsync(caseId);
        }
        
        public void CreateComment(int caseId, int personId, string text) {
            base.Channel.CreateComment(caseId, personId, text);
        }
        
        public System.Threading.Tasks.Task CreateCommentAsync(int caseId, int personId, string text) {
            return base.Channel.CreateCommentAsync(caseId, personId, text);
        }
        
        public Remee.JackmanService.Status[] GetStatuses() {
            return base.Channel.GetStatuses();
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Status[]> GetStatusesAsync() {
            return base.Channel.GetStatusesAsync();
        }
        
        public void CaseChangeStatus(int caseId, int StatusId, int SupporterId) {
            base.Channel.CaseChangeStatus(caseId, StatusId, SupporterId);
        }
        
        public System.Threading.Tasks.Task CaseChangeStatusAsync(int caseId, int StatusId, int SupporterId) {
            return base.Channel.CaseChangeStatusAsync(caseId, StatusId, SupporterId);
        }
        
        public Remee.JackmanService.Supporter[] GetSupporters() {
            return base.Channel.GetSupporters();
        }
        
        public System.Threading.Tasks.Task<Remee.JackmanService.Supporter[]> GetSupportersAsync() {
            return base.Channel.GetSupportersAsync();
        }
    }
}
